


====================
v3.4.0

- Added missing DISPIDs in IDL files for better readability in COM client code
- Added IOEMsgWnd::GetHandle
- Added IOEMsgWnd::SaveDraft
- Added IOEMsgWnd::Close
- Fixed demo plugin issues.
- Code cleanup.


====================


KNOWN ISSUES:
- if all the attachments are removed the attachment sign in the message list view's not removed.
- Doesn't work with limited account priviledges.
- Multi buttons doesn't work in OE toolbar.

TODO:
- Rules support.
- Images gif, png, ico.
- Open Message.
- resource support.
- create new popup menu.
- installation done in a correct way to support multi-clients.
- sample code in python.

BUGS:
- sub buttons with oe toolbar: it is not easy to solve. I've tested the button styles and they are fine (the same style of the 'Create Mail' btn), but I don't know why our btns work different: they keep the arrow pressed after the user press them and they notify with a WM_COMMAND instead of a WM_NOTIFY when the arrow is pressed.
- Yunli: If I write the string (taken from GetAllSource) into a file directly,
the OE can't open the email correctly,
I have to remove all '\r' first, then write to files,
the OE can open the files as normal email.
- GetAllSource and then setbodyfrom file doesn't because of '\r'.
- BUG: In NT if you create a menu item before some1 and the specified string doesn't exit, it create it a lot of times.
- If you create a FolderManager in the DllMain something doesn't work and blocks.
- BUG: Under Windows XP, if I logon as Guest (non-administrator account) and startup Launcher.exe, then after Outlook Express is started any function performed in Outlook Express will freeze up.
- BUG: Norton antivirus: after uninstalling OEAPI Norton is disabled.
- BUG:
I think that I've found a bug in your libray. I will describe the situation.
Run your demo program (for VC++), run Send/Receive and close the Outlook
main window. The download thread should be still working. After you close
Outlook run Windows Media Player. The luncher loads OEAPI again.

-  ioemail:=IDispatch(mail) as IOEMessage;
  ioemail.GetID(mailID);
  ioemail.GetFolderID(folderID);     //problems when getting AllSource direct, so getting mail by ID first
  fFolderManager.GetFolder(folderID,folder);
  folder.GetMessage(mailID,tmpmail);
  tmpmail.GetAllSource(mailsrc);
 
   ioemail:=IDispatch(mail) as IOEMessage;
   ioemail.GetID(mailID);
   ioemail.GetFolderID(folderID);
   ioemail.GetAllSource(mailsrc);
     SaveToFile('c:\mail.txt',mailsrc+#10+'####################next########################'+#10);
 
     fFolderManager.GetFolder(folderID,folder);
     folder.GetMessage(mailID,testmail);
     testmail.GetAllSource(testsrc);
    SaveToFile('c:\mail.txt',testsrc+#10+'*****************next***************************'+#10);
    
KNOWN ISSUES:
- Changing the subject of a message doesn't refresh the subject in the message list view.
- Message windows opened from 'Find' window (Ctrl+Shift+'F') are not hooked and no event is triggered and no toolbar is created.
 (La ventana Find esta en otro thread)
- Leaks.
- If you keep an OEFolderManager or OEFolder object in the _load event -> OE generates a error in the preview panel and doesn't display the current email.
- MSPaint: it hangs when launcher is active. (fixed?)
- Not thread safe for add-in configuration. (???)
- SetShown with OE toolbar is not reflected in toolbar menues. It appears visible when it isn't.


TODO (URGENT):
- BUG: OnFolderSelectionChanged is triggered before the msglist is created. It should be triggered when it's possible to call SetSelectedMessageID.
 (in progress)
 
- OnFolderSelectionChange have problems with modal dialog being show from it (see issue #804).

- Selecting a recently created message fails.
- SendMessage doesn't work in WM (work if WinMail is running and message is created in Outbox) (work from v3.2 if folder is Outbox).
- There are problems with subbuttons with pictures (leaks).
- Add caching pictures to buttons (handle the case of subbuttons).

v3.2.4
- New: Calling SetSelectedMsgID(-1) now deselect all message (#1004).
- Fix: OnMsgWndClosed event was not triggered for message preview's window (#1051).
- Fix: Send/Receive button sometimes didn't work on windows mail (#1053).
- Fix: Calling GetToolbar on messages preview's windows cause an access violation (#1054).
- Fix: OEToolbar::Destroy didn't work on messages window toolbars (#1055).
- Fix: Modifying msg with SetBodyText ends with =00 appearing in the msg source (#1050).

v3.2.3
- New: Add a sample implementation of OnDatabaseChange event to C# dll demo plugin.
- New: C# dll demo load toolbar's images from resources.
- New: New methods OEMessage::IsReadOnly/SetReadOnly, to open and check if the message was readonly.
- New: New method OEMessage::GetFlags returns flags which describe message composition.
- Fix: SendMessage didn't work in x64 in WinMail (#1001).
- Fix: Clone didn't copy account info in WinMail (#1005).
- Fix: Calling ActivateGlobalNotification caused OE to not shutdown.
- Fix: Sometimes selecting a non local folder caused a folder switch event, in WinMail.
- Fix: Sometimes C# demo failed to load a folder's messages, or displayed incorrect information.
- Fix: Sending one message with VC demo running sends twice (#1030).
- Fix: SendMessage works even when OE is set to Work Offline (#1029).
- Fix: SaveAsFile appends instead of overwriting when file exists (#1028).
- Fix: OEFolder::DeleteMessage(msgId, TRUE) show a confirmation dialog in Vista 64 (#1006).
- Fix: OnDatabaseChange case OE_TR_DELETE_FOLDER is called twice (#1038).

v3.2.2
- New: GetBcc/SetBcc in OEMsgWnd.
- New: OEAPI standard have a new freeware license.
- Fix: SendMessage not working under OE (#833).
- Fix: Missing message's listview headers (#818).
- Fix: WinMail crash when deleting folder (#827).
- Fix: Compact all folder crash under OE (#832).
- Fix: GetFilename/GetBodyProp incorrectly retrieve unicode characters (#875).
- Fix: WinMail crash while opening newsgroups folders (#8).
- Fix: Compilation as Unicode application (partial).
- Fix: Compilation for Vista x64.
- Fix: OESTORE message events trigger only for the first message under WinMail (#939).
- Fix: OEMessage::Delete work the same in OE and WinMail.
- Fix: Documentation cleanup.
- Fix: SendMessage work the same in OE and WinMail.
- Fix: C# demo have problems with folder with a large number of messages.
- Fix: SetBody in OEMsgWnd if WinMail is configured to create text only messages.
- Fix: SetImageNormal/SetImageMouseOver/SetPicture/SetPictureMouseOver incorrectly 
  set image normal as mouseover (#962).
- Fix: SetShown doesn't work from OnInitOEAPI (#982).

v3.2.1
- Fix: SendAndReceiveMessages works in WinMail.
- Fix: WinMail hang when cancel mail download while shutdown application.
- Fix: OEAPI doesn't check if 'Send Immdiately' is set.
- Fix: Toolbar options flashes when OEAPI toolbars being clicked.
- Fix: "Folder in use" while compacting folder on close under WinMail.
- Fix: Toolbar dissapear when a main windows is closed/opened while a message is open.
- Fix: Can't permanently a mail under WinMail (dll addins only).
- Fix: Unread count not updated under WinMail.
- Fix: Corrupt message while modifying headers under OE6.
- Fix: Remove OEAPI folder on Vista (setup).
- Fix: WinMail crash if main windows is closed/opened while a message window remain open.
- New: OnDatabaseChange folder rename/move events 
- New: Remove VC Demo from OEAPI project.

v3.2.0.1 - private 
- Fix: OE crash when contains more than 80 folders.
- Fix: WinMail show can't display folder's message when contains a lot of folders.
- Fix: OnDatabaseChange, OnNewMessageInInbox are triggered in a different thread.
- Fix: OnDatabaseChange, OnNewMessageInInbox are not triggered for out-of-proc objects.


v3.2.0
- New: Add Set/GetColorMask to OEToolbar.
- New: Add GetName, IsEnabled, IsVisible, GetTooltip to OEButton.
- New: Add IsVisible, IsEnabled, GetText, SetText to OEMenuItem.
- New: Add SetPicture, SetMouseOverPicture to OEButton.
- New: Add CreateSubSeparator to OEButton.
- New: Add CreateItemAt, CreateSeparatorAt to OEMenu (experimental).
- New: Add support to MessageStore in OEStore (work in WinMail).
- New: Add support to multiple instances of OEAPI (if you have source code see oeapi_config.h, oeapi_guids.h).
- New: Add GetIHTMLDocument2 to OEMsgWnd (experimental feature may not work correctly).
- New: Replace IStoreNamespace & IStoreFolder in OECOM by IMessageStore & IMessageFolder,
  This is a pretty large change so this need a lot of testing and make it work on WinMail.
  Previous version is in the branch 'oecom_with_storenamespace'.
- New: Use lparam from TVITEM to get FolderId on SelectedFolderId, and SetSelectFolderName.
- New: Refactor OEAPIMessageStore into OE and WM counterparts.
- New: OEAPIObj's SendMessage work in WinMail if mail is in Outbox (use default pop3' account).
- New: Add OE_TR_UNREAD_MESSAGE and OE_TR_READ_MESSAGE to OnDatabaseChange (experimental on WinMail).
- New: Add GetPictureSize to OEToolbar.
- New: Register events in the same way in WinMail and OE6.
- Fix: SubButtons now support checked style, enable/disable.
- Fix: OEButton drop down arrow display incorrectly on default toolbar (main and message windows).
- Fix: OEToolbar resize incorrectly when adding a drop down OEButton.
- Fix: Make OEMenuitem SetText work correctly.
- Fix: OEButton can set a picture if they were created without it.
- Fix: Can remove a picture from OEButton (SetPicture(NULL)).
- Fix: OnMessageDownloadFinished triggered multiple times.
- Fix: OEFolder's OnNewMessage give a pointer instead of msgId for WinMail.
- Fix: Make SetPicture works on subbutons.
- Fix: Make OEButton adjust width to text on WinMail.
- Fix: OEButton doesn't display caption when the toolbar contains one separator and one buttons without image.
- Fix: Change oeundoc's name convention to match the one used in OE.
- Fix: OEMessage Clone and Commit methods fails when oestore is loaded within WinMail process.
- Fix: GetTo, GetCC on WinMail.
- Fix: 100% CPU when switch identities on OE6 using a .NET addin.
- Fix: OEButton in OEDefault toolbar when using IPictureDisp.
- Fix: WinMail can't add more that one separator in OEButton drop downs.

v3.1.2
- Fix: GetDefaultAccountSettings return wrong info (fixes SendMessage in OE).
- Fix: Dissapear buttons in default toolbar in message windows (need testing).
- Fix: Fix toolbars in WM, layout, size.
- Fix: 'Send All', 'Rec All', 'Send & Rec All' were not working in WM.
- Fix: Can set tooltips in main window toolbar.
- Fix: IE7 crash when launcher is running and UAC is enabled.
- Fix: New message in Outbox in WinMail.
- New: OEAPI C# demo included in the installation.
- New: VerifyExpiration now uses SYSTEMTIME instead of time_t (which is now 8 bytes and dont fit in a REG_DWORD).
- New: Source version include VS2005 projects, which is used to build official OEAPI,
       There is a VS6 project version but is not tested as VS2005 projects.

v3.1.1
- Fix: Buttons disappear in default OE message window toolbar if buttons doesn't have text.
- Fix: IE7 not working in vista if launcher is running.
 
v3.1.0 -> release v3.1.0
- Fix: Compiler warning under vs 2003/2005 (not complete yet).
- Fix: Documentation errors oecom.idl, oestore.idl.
- Fix: Cleanup undocumented code.
- Fix: Identify switch on XP/2000 (unregister notification in from IMessageStore).
- Fix: IMessageList is not public in Vista RTM, and everything that relly on this will fail
	(GetSelectMessageId, GetCurrentMessage, etc).
- Fix: SetSelectFolderId not working in Vista RTM.
- Fix: Call CoUninitialize before leaving.
- Fix: VB demo complain about duplicate definitions, add option explicit to all files.
- Fix: VC demo spelling errors.
- New: Support for toolbars and menu in message windows.
- New: Tooltips on toolbars.
- New: Caching of IStoreFolder within OEFolder and OEMessage (better NET support).
- New: On demand register notifications to OEFolder.
- New: NktLock and NktRegistry classes (wrappers).
- Update: copyright information to include year 2007.
- Update: Binaries compiled with VS 2003.

 
v3.0.2 -> release 3.0.0
- Fixed bug when iterating OEFolder.
- First message appearing twice on Windows Mail.
- New installer using NSIS.
- Add two targets for each OEAPI version Evaluation, Standard.
- Link static agains VC++ 6 runtime.

V3.0.1
- IOEMsgWnd::GetHandle.
- MSPaint: it hangs when launcher is active.
- BUG: SendMessage doesn't work at all.
- GetToolbar shouldn't verify the OEAPI id.
- Verify if OEAPI is not registered and show a message box.
- Chevron: in OE toolbar it doesn't work.
- OE sub buttons doesn't work.
- Select messages: update list view to make visible new current item.
- Online messages support: only when available.
- Create Message as draft: the user will be able to edit it.
- Parse recipients (to and cc) and make a enumerator.


V3.0.0

TODO:
- Pre-RC1: OEAPIManager::OEAPIManager: Error RegisterNotification


Features:

- Vista's Windows Mail support (Beta 2).
- OpenCurrentMessage: it simulates a double-click on the current item.
- ComposeMessage: it simulates a 'Compose Message' action.
- CreateMessage: has a new flag to set that the new message is created unread (interface modified).
- Message Selection: all the code was modified in order to improve the performance and the reliability.
- Folder selection change: performance improved.
- OEIdentity: let you know current identity. Useful to know if the identity has changed to prevent re-scan folders on startup.
- Professional and Enterprise: very fast notifications for new messages and deleted messages (OEAPI.OnDatabaseChange).

BUGS:
- IOEMessage::GetFirstBodyProp / IOEMessage::GetFirstBodyProp: property names listed where of the body root event when another was specified.
- Message Selection: now it works in all 'View' options.
- IOEFolderManager::GetFolder: didn't return NULL for invalid folders.
- After 10 or more fast open and close OE crashed.


V2.3.1

BUG:
- Remove typelibrary entries.

Features:
- Check style for menu items.

V2.3

BUGS:
- OEAPI_INIT_HANDLE leak.
- Enterprise: a error was displayed when sending messages.
- Compact messages: in some situations a 'File in use' error was displayed generated when OE compacts folders.
- IOEMessage.GetAllSource: after calling IOEMessage.GetBody(bytes) or IOEMessage.GetHeader this function returned all the bytes that weren't returned in previous call. It wasn't reseting the cursor.
- When the user logs off without closing OE, OEAPI does not shutdown.
- OEToolbar.SetTransparencyColor: explanation.
- If a message window was opened after 
- Add a Sleep before triggering OnMessageDownloadFinish.
- OEFolderManager.OnNewMessage was loosing some messages.
- DBNotifyWndProc error when logging off without closing OE.
- After sending a message it was not possible to show the 'Send/Recv' Dialog for some seconds.
- Non-Priviledged user cannot use OEAPI: 
IMPORTANT: now it's necessary to register oecom.dll

- ActivateGlobalNotification: trigerring new message event on a folder (for example on Inbox folder) works fine.
    - first I have written a small piece of Delphi code which add a listbox item (message id) at each new mail event
    - next I have a small program that send many messages to my account 
    - when I compare listbox items with messages I've sent there is a big difference.
    Note that when I trigger directly on the inbox folder the listbox items are exactly the items i've sent.
- Niels: When you create an e-mail, then close the main window of OE, now send the e-mail (main window still closed), you are left with a box that says that the message has ben sent. This is the same box that is displayed when you press 'send and receive'. After this Outlook Express doesn't start anymore. In the taskmanager its visible that MSIMN.exe is still running.
- IOEMessage:Send: it takes the default account of main identity instead of getting from current identity.
- switch identity crash: after some identity switches, it crashes.
- Launcher appeared in application tab.
- Problem calculating size of sub buttons in some situations.
- Enterprise: when OE toolbar in message windows had any button with sub buttons, buttons dissapeared after adding buttons using OEAPI.
- In some computers that have the default configuration of 'Send message immediatly' option, messages weren't sent immediatly.
- Enterprise: Wnd style was wrong for OE_EMPTY_MSG_WND or OE_CURRENT_MSG_WND in some situations.


Features:
- OnOEAPIInit event: now OE does not start until all clients of this event finish. This change is to give the change to clients to make their staff before OE starts in the same way Outlook does with OnConnection event.
- I've rollbacked a change made with oehook.dll: now, oehook.dll is loaded only in launcher (or the process that calls LoadLibrary("oehook.dll")) and in OE. Only in NT 4 is loaded in all the processes as before.
- OEFolderManager::ActivateGlobalNotification: Obsolete: the global notification OnNewMessage is always active. It's kept only for typelibrary compatibility but it does nothing.
- Enterprise: new event OnMsgWndClosed that is triggered when a message window is closed. If it's not the message window that is in main window (I mean it's a separate message window) you can access the content of the message window before it's destroyed.
- Enterprise: GetFirstMsgWnd / GetNextMsgWnd to browse message windows.
- Enterprise: Get active window.
- IOEMessage:SaveAsFile: Save message to disk.


NOTE: Typelibrary is not compatible with previous version.

TODO:
- If a addin hooks main window then it generates a exception because it's impossible to unset the hook in the correct order: addins should be called in inverse order of the registration.
- Display LoadLibrary error if any.
- Evaluation Version: dbgprint to nothing.

- probar q pasa con 2 launchers


V2.2.5

BUGS:
- Sub menu items appeared disabled.
- The Send/Recv window cannot be shown after pressing 'hide' button.
- 'Send Mail Immediately' property was ignored: when the user sent a message, it was sent immediately event if this property was false.
- Sub buttons's image had a wrong size so it cut some pixels.

Features:
- IOEButton.SetPopupStyle: set this style TRUE if you want to show the sub buttons of the button when the button is clicked.

V2.2.4

BUGS:
- When a attachment was added in a message window and any context menu option was clicked (e.g.: Arrange by Name) OE freezed.
- W2K: sometimes (~10%) OE crashed or didn't shutdown fine. The same occurred when switching identities.
- Enterprise: When message was initiated from outside Outlook Express, and Outlook Express is opened, OnNewMessageInOutbox event does not work properly.
- BUG: 2K: Sometimes after changing the default order of the message list view the message selection was working wrong.

Features:
- Professional: IOEAPIObj:SetSelectedFolderID: select folder.
- IOEMessage.SetFolderID: can be used to create messages using OEMessage instead of IOEFolder.CreateMessage.


V2.2.3

Features:
- Toolbar separators.
- IOEFolder: GetMessageCount, GetSubFolderCount, GetUnreadCount functions.
- Enterprise: The event OnNewMsgWnd is triggered when a new message is selected and you can change the contents of the window displaying the message in the main window.

BUGS:
- Under 2000 (or all). OE takes a long time to shutdown and if you try to load again before it shutdowns, OEAPI has problems. Sometimes (not verified) this problem is present even if OE completely shutdowns.
- Professional: Message selection in Draft and Sent folders was working wrong.
- Enterprise: Toolbar Sub buttons didn't work in message windows.
- Enterprise: when OE is closed with a window opened, it crashed after the window is closed.
- Enterprise: when OE is closed with a window opened, OEMsgWnd events didn't work.
- Menu items in the Tools menu appeared in another sub menu.
- Delphi example: it had old type library imports.

V2.2.2
Features:
- COPYRIGHT in all the files.
- Enterprise: Get / Set To Cc.
- Identities: basic support. Now when you attach OESTORE library it uses current identity, so if you release all OESTORE objects in OnInitOEAPI event and then create them again (see demo applications) OESTORE will refer to the storage of current identity.
- oehook.dll was loading and then unloading to prevent hooking windows of any application. That was generating a overhead. Now, it loads in all the applications. This is better for the performance of the system but it's worse for the uninstallation process.

BUGS:
- IOEMessage:Send should be used ONLY when OE isn't running. Now there is another function to send messages IOEAPIObj:SendMessage that let you send messages when OE is running.
NOTE: if OE threw errors while sending and receiving messages and you were using IOEMessage::Send function, you should use this new function instead.
- BUG: folder selection was working wrong in some strange circumstances.
- BUG: Plugins running in OE: doing some operations in the OnClick event of a OE toolbar, OE blocked.
- BUG: If OE was sending messages and the function IOEAPIObj:SendAndReceiveMessages was called a error was thrown by OE.
- BUG: IOEMsgWnd:GetBody / IOEMsgWnd:GetBodyLength was generating some inestability in OE (sometimes this caused that OE wasn't shutdowning properly).

V2.2.1
Features:
- Small example in Delphi.
- Standard: IOEMessage:Delete / IOEFolder:DeleteMessage: these functions have a extra parameter to indicate if the message is sent to the 'Deleted items' folder or not.
- Standard: IOEAPIObj:GetOEMainWindow returns the handle of OE main window.
- Enterprise: IOEMsgWnd:GetBodyLength: get the length of the body of a message window.
- Standard: multiple plugin installation.

BUGS:
- Standard: IOEAPIObj::CreateToolbar returned a IOEToolbar instead of OEToolbar.
- Standard: OnShutdownOEAPI event wasn't triggered on dll plugins that are loaded by OEAPI. Now it is triggered always the plugin is holding a OEAPI object (OEToolbar, OEAPIObj, OEButton, OEMenu, OEMenuItem or OEMsgWnd). If it is not holding this kind of objects it could be called or not.
- Standard: In NT4 oehook.dll was having some problems.
- Standard: When a event was being handled and OE shutdowned a exception was raised.
- Standard: If the user closed OE main window and a message window was active when pressed the send button a exception was thrown.
- Enterprise: IOEMsgWnd:SetSubject didn't work fine in W98.
- Enterprise: the event IOEAPIObjEvents:OnNewMessageInOutbox was not working in some versions of W98 as win32 function EnumChildWindows has a bug (in W98).
- Enterprise: Some bugs where found in OnNewMessageInOutbox event. Sometimes it wasn't triggered, sometimes it didn't wait until the event return to send the mail, etc.
- Professional: in first run of OE (before the message list view is shown for first time) the message selection was wrong.

V2.2

Features:
- Standard: Global event when a new message is created in any folder (IOEFolderManagerEvents::OnNewMessage(folderId, msgId)). This feature was done with a BIG workaround so it's in a experimental stage.
- Standard: Force 'Send/Recv' to send Outbox messages (IOEAPIObj::SendAndReceiveMessages).
- Enterprise: OEMsgWnd wrapper in VC++.
- Enterprise: Outbox Filter: You can modify messages before they are sent using IOEMessage interface (IOEAPIObjEvents::OnNewMessageInOutbox(msgId)).

BUGS:
- BUG: the event OEAPIINITCOM::OnShutdownOEAPI is triggered before all OEAPI objects are destroyed.
Now, OEAPI waits until all the objects are released before it shutdowns.
BE CAREFUL: if you don't release a object OE will not close until you release it.



V2.1.8

- Windows 98 support: see Install.rtf to see the necessary installation modules.
- Professional: GetCurrentMessageID returns the message displayed in the bottom part of OE main window (useful for multi-selection).
- Professional: OnCurrentMessageChanged event is triggered when the current message changes.
- Enterprise: IOEMsgWnd::CancelSend: on the OnSendButtonMsgWndClicked event it's possible to cancel the Send process started by the user.

BUGS:
- Menu items disappeared after selecting a newsgroup / IMAP folder.
- IOEMessage: some encodings were working wrong in SetBodyText / GetBodyText functions.
- Buttons in OE toolbar disappeared after changing folder.
- Message selection was wrong if no message was selected.
- GetFirstChild of 'Local folders' returned null folder.
- OEStore::OEFolder::IsInbox / IsOutbox returned always false.
- Enterprise: LEAK: GetBody leaked a small buffer.
- Enterprise: IOEMsgWnd::SetBody worked wrong with anchors.


V2.1.7

Changelog:
- Plugin support in OE address space for Visual Basic: you can specify the class name instead of the dll.
- Set a custom property to any body.
- Enum properties in a body.

BUGS:
- GetBodyHandle: Invalid TRACEs.
- Performance: in big folders when the user selected a different message, it was slow as it was creating a new message table in each selection change.
- Normal users where unable to use OEAPI library.
- LEAK: IOEMessage interface wasn't releasing a buffer.


V2.1.6
Changelog:
- Add buttons to OE toolbar (not a new toolbar). Known bug: if the button cannot be seen because the toolbar is too small, the chevron only appears if a OE button cannot be seen too. This bug is present in PGP plugin too.
- Intallation does not require the Registry key. You only need to put oehook.dll and oecom.dll in the same path.
- oehook.dll is only loaded inside OE and the launcher app. Before this version, oehook.dll was attached to all the processes that created windows, so the uninstallation of the plugins was difficult as you had to kill all the processes.


BUGS:
- Button bug: when toolbar buttons were created before the OE toolbar, their size was wrong (too small). In demo VC++ was easy to reproduce it.
- Buttons destroy: when a button had sub buttons, its destruction ended with a exception. 
- select all: this event is not handled and the selection is wrong.
- after the deletion of the selected message, the selection was invalid (return -1).
- Only for Plugins attached to OE: if any OEAPIObj was created: on event OnMessageDownloadStart the OE main thread was locked.
- Message selection: sometimes the message selection could not be retrieve when OE was launched. If you selected a new folder, the bug was not present any more.




=== Old TODO ====


Vista:
- OE Toolbar (done?).
- Toolbar degrade (done?).
- Button color (done?).


BUGS:
- Chevron OE toolbar doesn't work fine. It is shown only when a OE button disappear but not when our buttons disappear.
- BUG: if you don't finish enumeration in OEFolderManager it keeps running forever (test in beeweeb addin). (done?)


KNOWN ISSUES:
- Sub buttons in default OE toolbar doesn't work.

Windows Mail:
- Folder deletion / folder creation isn't reflected in the list view: when the user deletes a folder or creates a new one the list view continue showing the old state.
The problem is with the IMessageList and IMessageStore objects. If I comment the CreateStorageObjects function this behaviour isn't observed.
  And guilty is msgStore->RegisterNotify(2, 1, OEAPI_FOLDER_EVENT, this) if commented out, the folder tree work fine.
- List view update: when a message is sent the list view doesn't update the unread count in Outbox folder. It should be related to the previous problem.

TODO:
- Release all IMessageFolder: they are created using OpenFolder and never released. (done?)
- VS2005: adapt example. (atl, done?)
- Receive within SendandReceiveAll does not work.
