{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\froman\fprq2\fcharset0 MS Serif;}{\f3\fnil\fprq2\fcharset2 Wingdings;}{\f4\fnil\fcharset2 Symbol;}}
{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
{\*\generator Msftedit 5.41.15.1515;}\viewkind4\uc1\pard\keepn\s1\fi-2160\li2160\sb240\sa60\qj\lang2057\kerning28\b\f0\fs28 OEAPI 3.3.1\par
\pard\nowidctlpar\qj\kerning0\b0\fs20\par
\pard\keepn\s2\qj\b\f1\fs24 About demo applications:\par
\pard\nowidctlpar\qj\b0\f0\fs20\par
Demo applications were not made to test OEAPI\rquote s stability. These were written just to show the actual functionality of the library.\par
The OEAPI is the result of research and development for several customers. That knowledge allowed us to create the OEAPI joining all that work in some COM objects.\par
\pard\nowidctlpar\sb100\sa100\qj The library has been improved a lot and several times thanks to the results of our research.\par
For documentation of the methods you can see the included OEAPI-Help.chm file, or you can use the object browser.\par
\pard\keepn\s2\qj\b\f1\fs24\par
About VC++ Demo application:\par
\pard\nowidctlpar\qj\b0\f0\fs20\par
You need to install Comet library before compiling the demo in VC++.\par
(\f1 http://www.lambdasoft.dk/comet/download.htm\f0 )\par
The application is a full example of the features of the library. Objects of the OEAPI library must be instanced when the library is active or you will run OE when CoCreateInstance is called.\par
For example, if you create a toolbar when OE is not running, you will implicitly run OE.\par
\pard\nowidctlpar\fi-720\li720\sb100\sa100\qj\par
\pard\keepn\s2\qj\b\f1\fs24 About OEAPI Source Code.\par
\pard\nowidctlpar\qj\b0\f0\fs20\par
OEAPI source code can be bought for \b U$999\b0 .\par
To compile OEAPI you need to download and install Comet library.\par
(\f1 http://www.lambdasoft.dk/comet/download.htm\f0 )\par
If you get errors verify if you have already installed Microsoft SDK.\par
\pard\keepn\s1\sb240\sa60\qj\kerning28\b\fs28\par
Delphi\par
\pard\ri18\tx720\cf2\lang1033\kerning0\b0\f2\fs20\par
\lang2057\f0 To use OEAPI from Dephi:\par
\par
\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\fi-360\li360\ri18\tx360\tx720 Select: Project -> Import Type Library.\par
{\pntext\f4\'B7\tab}Select OEAPI in the listbox and press \lquote Install\rquote .\par
{\pntext\f4\'B7\tab}Select the tab \lquote Into new package\rquote  and choose a name (e.g.: OEAPI).\par
{\pntext\f4\'B7\tab}After building the package do the same with \lquote OEAPIINITCOM\rquote  and \lquote OESTORE\rquote  but after pressing Install, select \lquote Into existing package\rquote  and select the previous created package.\par
{\pntext\f4\'B7\tab}After doing all that OEAPI can be used as any ActiveX control: remember that when you \lquote Connect\rquote  OEAPI library you will implicitly launch OE as it is registered in OE.\par
\pard\ri18\tx720\par
\pard\keepn\s1\sb240\sa60\qj\cf0\kerning28\b\fs28 Documentation\par
\pard\nowidctlpar\fi-720\li720\sb100\sa100\qj\kerning0\b0\fs20 For full documentation of the library you can see the included OEAPI-Help.chm file, or open the  \b doc\\html\\index.html\b0  file in OEAPI\rquote s directory.\par
\pard\keepn\s1\sb240\sa60\qj\kerning28\b\fs28 Components\par
\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\nowidctlpar\fi-360\li360\sb100\sa100\qj\tx360\kerning0\f1\fs24 oeapiinitcom.dll\i :\b0\f0\fs20  \i0 contains the OEAPIINITCOM library. It contains the OEAPIInit ActiveX object that triggers the event \b OnInitOEAPI\b0  when the OE starts running and the event \b OnShutdownOEAPI\b0  when OE shutdowns. Between these 2 events you can instance any object of OEAPI library (see oecom.idl) without launching OE.\par
\b\f1\fs24{\pntext\f4\'B7\tab}oecom.dll:\b0\f0\fs20  this dll runs in the address space of OE and must be loaded by oehook.dll when OE starts running. If you instance any object of this dll (OEAPI library) you launch OE (see in the demo application what happen if you create a toolbar and OE is not running) as it registers the COM server in the OE. \par
\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlcont\pnf4\pnindent0{\pntxtb\'B7}}\nowidctlpar\li360\sb100\sa100\qj NOTE: you must release all objects of this library in OnShutdownOEAPI event. Otherwise, this library will not shutdown.\par
\pard{\pntext\f4\'B7\tab}{\*\pn\pnlvlblt\pnf4\pnindent360{\pntxtb\'B7}}\nowidctlpar\fi-360\li360\sb100\sa100\qj\tx360\b\f1\fs24 oestore.dll:\b0\f0\fs20  this dll contains OESTORE library that let you instance the main object \b OEFolderManager\b0 . It lets you use folders and messages. You can use these objects without launching OE.\par
\b\f1\fs24{\pntext\f4\'B7\tab}oehook.dll:\b0\f0\fs20  this dll must be loaded from an application that runs from start-up. It loads oecom.dll when the OE is launched.\par
\pard\nowidctlpar\li360\sb100\sa100\qj This dll implements a window hook and is loaded only in OE and the process that loads this dll. To do it, it return FALSE when other processes try to load it (in NT this cannot be done so it is loaded in all the processes). When a dll returns FALSE in DllMain generates a debug line saying that the dll was loaded first and unloaded after. To prevent this behaviour set the registry key:\par
\pard\nowidctlpar\fi360\sb100\sa100\qj HKEY_CURRENT_USER\\SOFTWARE\\Nektra\\OEAPI\par
Value:\par
HookAllProcesses\tab\tab REG_DWORD\tab\tab\tab  1\par
\pard\nowidctlpar\sb100\sa100\qj Setting this value as above the hook dll is loaded in all the processes and the debug lines are not printed.\par
\pard\nowidctlpar\fi-360\li360\sb100\sa100\qj\tx360\f3\fs24\'a7\tab\b\f1 launcher.exe:\b0\f0\fs20  is an application that runs from start-up and only loads oehook.dll. \par
\pard\keepn\s1\sb240\sa60\qj\kerning28\b\fs28 Functionality\par
\pard\nowidctlpar\qj\kerning0\b0\fs20\par
\pard\keepn\s2\qj\b\f1\fs24 Local Folder\par
\pard\nowidctlpar\qj\b0\f0\fs20\par
Only local folders are supported at the moment.\par
\par
\pard\keepn\s2\qj\b\f1\fs24 Identities\par
\pard\nowidctlpar\qj\b0\f0\fs20\par
To handle identities is important to force reload of OESTORE library during the OnInitOEAPI event of the \f1 OEAPIINITCOM library\f0 . To do it you need to release all the objects of OESTORE library.\par
See how this is handled in demo applications.\par
\par
\pard\keepn\s2\qj\b\f1\fs24 OEAPIINITCOM library\par
\pard\qj\b0\fs20\par
\pard\nowidctlpar\qj\f0 This object let you know when the Outlook Express is loaded and when it is unloaded.\par
\pard{\pntext\f0 1\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj\b OEAPIInit\b0  object: it triggers 2 events:\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\tab\b OnInitOEAPI:\b0  triggered after the Outlook Express is loaded and the OEAPI library is initialised. If the OE is loaded and you instance this object this event is triggered.\par
\tab\b OnShutdownOEAPI:\b0  triggered when the Outlook Express window is closing.\par
\par
\par
\par
\pard{\*\pn\pnlvlcont\pnf1\pnindent0\pnstart1\pndec }
\keepn\s2\qj\b\f1\fs24 OEAPI library\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\qj\b0\f0\fs20\par
This library implements all the functionality inside the Outlook Express.\f1\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\f0\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\keepn\s3\sb240\sa60\qj\fs24 Menus\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\fs20\par
\pard{\pntext\f0 2\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj Create / Destroy / Enable / Disable menu items in any standard menu.\par
{\pntext\f0 3\tab}Create sub items in any item created.\par
{\pntext\f0 4\tab}Event: \par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi720\li720\qj\b OnClick\b0 : when the item is clicked.\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\keepn\s3\sb240\sa60\qj\fs24 Toolbars\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\fs20\par
\pard{\pntext\f0 5\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj Add buttons to OE toolbar (known bug: sub buttons does not work).\par
{\pntext\f0 6\tab}Create / Destroy / Hide / Show 1 or more additional toolbars.\par
{\pntext\f0 7\tab}Create / Destroy / Hide / Show / Enable / Disable buttons.\par
{\pntext\f0 8\tab}Create sub buttons.\par
{\pntext\f0 9\tab}Large buttons property.\par
{\pntext\f0 10\tab}Dynamic change of button properties (name or images).\par
{\pntext\f0 11\tab}Event: \par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi720\li720\qj\b OnButtonClicked: \b0 when the button is clicked.\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\keepn\s3\sb240\sa60\qj\fs24 Selection\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\fs20\par
\pard{\pntext\f0 12\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj Get the selected folder (Professional Edition).\par
{\pntext\f0 13\tab}Hotmail and newsgroups support: detect that an unknown folder (not local) was selected and trigger the event with a special id (-1).\par
{\pntext\f0 14\tab}Get selected messages (Professional Edition)\i .\i0\par
{\pntext\f0 15\tab}Select message/s (Professional Edition)\i .\i0\par
{\pntext\f0 16\tab}Select folder (Professional Edition)\i .\i0\par
{\pntext\f0 17\tab}Event:\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\b\tab\tab OnFolderSelectionChanged:\b0  Event triggered when the selected folder changes (Professional Edition).\par
\b\tab\tab OnMessageSelectionChanged: \b0 Event triggered when the selected message/s change (Professional Edition).\par
\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\keepn\s3\sb240\sa60\qj\fs24 Outbox filter\par
\pard{\*\pn\pnlvlcont\pnf1\pnindent0\pnstart1\pndec }
\f1\fs20\par
\pard{\pntext\f0 18\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj\f0 Event:\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\b\tab\tab OnNewMessageInOutbox:\b0  Event triggered when a message arrives to Outbox folder and it is ready to be sent. It will be sent after this event returns (Enterprise Edition).\par
\par
\par
\pard{\*\pn\pnlvlcont\pnf1\pnindent0\pnstart1\pndec }
\keepn\s2\qj\b\f1\fs24 OESTORE library\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\b0\f0\fs20\par
This library implements all folder and messages functionality. It can be used even when OE is not running.\par
\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\keepn\s3\sb240\sa60\qj\fs24 Folders\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\fs20\par
\pard{\pntext\f0 19\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj Browse local folders: you can ask to a folder the children or you can use the OEFolderManager object to browse all the folders.\par
{\pntext\f0 20\tab}Ask whether is a special folder (IsInbox, IsOutbox, etc.).\par
{\pntext\f0 21\tab}Rename a folder.\par
{\pntext\f0 22\tab}Move a folder.\par
{\pntext\f0 23\tab}Delete a folder.\par
{\pntext\f0 24\tab}Create a folder.\par
{\pntext\f0 25\tab}Events: \par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\tab For a specific folder:\par
\tab\tab\b OnNewMessage:\b0  Event triggered when a message arrives to the folder.\par
\tab\tab\b OnMessageDeleted:\b0  Event triggered when a message of the folder is deleted.\par
\tab\b\tab OnDeletion:\b0  Event triggered when the folder is deleted.\par
\tab General events (\b OEFolderManager)\b0 :\par
\tab\tab\b OnFolderCreated:\b0  Event triggered when a folder is created.\par
\tab\tab\b OnFolderDeleted:\b0  Event triggered when a folder is deleted.\par
\tab\tab\b OnFolderRenamed:\b0  Event triggered when a folder is renamed.\par
\tab\tab\b OnFolderMoved:\b0  Event triggered when a folder is moved.\par
\tab\tab\b OnFolderUnreadChanged:\b0  Event triggered when a message from a folder changes its read flag.\par
\tab\tab\b OnNewMessage:\b0  Event triggered when a message arrives to Inbox or any ordinary folder (not Outbox, Sent, Deleted Items or Draft).\par
\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\keepn\s3\sb240\sa60\qj\fs24 Messages\par
\pard{\*\pn\pnlvlcont\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\qj\fs20\par
\pard{\pntext\f0 26\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj Browse messages in a folder.\par
{\pntext\f0 27\tab}Get Body.\par
{\pntext\f0 28\tab}Get Header.\par
{\pntext\f0 29\tab}Get message state.\par
{\pntext\f0 30\tab}Get priority.\par
{\pntext\f0 31\tab}Get display from, to and subject.\par
{\pntext\f0 32\tab}Delete message.\par
{\pntext\f0 33\tab}Mark as unread/read.\par
{\pntext\f0 34\tab}Copy messages.\par
{\pntext\f0 35\tab}Move messages.\i\par
\i0{\pntext\f0 36\tab}Create a new message in a folder.\i\par
\i0{\pntext\f0 37\tab}Send a message.\i\par
\i0{\pntext\f0 38\tab}Clone the message. Properties that cannot be changed in a proper way like Subject, To, From, etc. can be \lquote workarounded\rquote  using this functions. You need to Clone the message, change what you need, Commit the message and delete the cloned message.\i\par
\i0{\pntext\f0 39\tab}Attachment API:\i\par
\pard{\pntext\f0 40\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li1440\qj\i0 List attachments.\i\par
\i0{\pntext\f0 41\tab}Add Attachment.\i\par
\pard{\pntext\f0 42\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li720\qj\i0 Message Bodies:\i\par
\pard{\pntext\f0 43\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec }
\nowidctlpar\fi-720\li1440\qj\i0 Navigate bodies.\i\par
\i0{\pntext\f0 44\tab}Insert / Delete.\i\par
\i0{\pntext\f0 45\tab}Set / Get text.\i\par
\i0{\pntext\f0 46\tab}Get / Set Properties (the properties can be set but will not change the properties seen in the message list view like Subject, To, From, etc.).\i\par
\i0{\pntext\f0 47\tab}Get / Set Custom properties. You can set any property.\i\par
\i0{\pntext\f0 48\tab}Enumerate properties\i\par
\pard\nowidctlpar\qj\i0\par
}
 